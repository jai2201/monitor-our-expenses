# Generated by Django 4.0.1 on 2022-01-16 18:54

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='BaseUserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('fullname', models.CharField(max_length=50)),
                ('profile_picture', models.ImageField(blank=True, null=True, upload_to='profile_picures')),
                ('is_active', models.BooleanField(default=True)),
                ('is_admin', models.BooleanField(default=False)),
                ('is_email_verified', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Expense',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_amount', models.IntegerField(default=0)),
                ('description', models.CharField(max_length=1000)),
                ('split_type', models.CharField(choices=[('Equally', 'Equally'), ('Unequally', 'Unequally'), ('By percentages', 'By Percentages')], max_length=100)),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('note', models.CharField(blank=True, max_length=500, null=True)),
                ('is_setteled', models.BooleanField(default=False)),
                ('added_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='added_by', to=settings.AUTH_USER_MODEL)),
                ('who_has_paid', models.ManyToManyField(related_name='who_all_has_paid', to=settings.AUTH_USER_MODEL)),
                ('with_whom_to_split', models.ManyToManyField(related_name='with_whom_to_split', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserQueries',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254)),
                ('query', models.CharField(max_length=1000)),
                ('is_solved', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_of_transaction', models.CharField(choices=[('TO_PAY', 'TO_PAY'), ('TO_RECEIVE', 'TO_RECEIVE')], default='TO_PAY', max_length=100)),
                ('amount_to_exchange', models.IntegerField(default=0)),
                ('expense', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='manage_expenses_app.expense')),
                ('with_whom', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ExpensesGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('group_name', models.CharField(max_length=100)),
                ('group_type', models.CharField(choices=[('Friends', 'Friends'), ('Trip', 'Trip'), ('Home', 'Home'), ('Couple', 'Couple'), ('Other', 'Other')], default='Friends', max_length=200)),
                ('group_picture', models.ImageField(blank=True, null=True, upload_to='group_pictures')),
                ('expenses', models.ManyToManyField(blank=True, related_name='groups_list_for_this_expense', to='manage_expenses_app.Expense')),
                ('members', models.ManyToManyField(related_name='groups_list', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment_message', models.CharField(max_length=1000)),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('commented_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('expense', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='manage_expenses_app.expense')),
            ],
        ),
    ]
